     1                                  global start
     2                                  
     3                                  bits 32
     4                                  
     5                                  extern scanf, printf, exit, fread, fopen, fclose
     6                                  import scanf msvcrt.dll
     7                                  import printf msvcrt.dll
     8                                  import exit msvcrt.dll
     9                                  import fscanf msvcrt.dll
    10                                  import fopen msvcrt.dll
    11                                  import fclose msvcrt.dll
    12                                  import fread msvcrt.dll
    13                                  
    14                                  ;a file name is read from the keyboard and a integer number N. The program
    15                                  ;will read from the file and make the sum of the n'th bite from every number
    16                                  
    17                                  segment data use32 class = data
    18 00000000 00<rept>                    file_name times 20 db 0 
    19 00000014 7200                        read_mode db 'r', 0
    20 00000016 FFFFFFFF                    fd dd -1
    21 0000001A 257300                      format_str db "%s", 0
    22 0000001D FFFFFFFF                    n dd -1
    23 00000021 256400                      format_int db "%d", 0
    24 00000024 00<rept>                    sir times 50 db 0
    25                                      len equ 50
    26                                      
    27                                  
    28                                  segment code use32 class = code
    29                                  
    30                                      start:
    31 00000000 68[00000000]                push dword file_name
    32 00000005 68[1A000000]                push dword format_str
    33 0000000A FF15[00000000]              call [scanf]
    34 00000010 83C408                      add esp, 4 * 2
    35                                      
    36                                      ;open the file
    37 00000013 68[14000000]                push dword read_mode
    38 00000018 68[00000000]                push dword file_name
    39 0000001D FF15[00000000]              call [fopen]
    40 00000023 83C408                      add esp, 4 * 2
    41                                      
    42 00000026 83F800                      cmp eax, 0
    43 00000029 747A                        je eroare
    44 0000002B A3[16000000]                mov [fd], eax
    45                                      
    46                                      ;read n from the keyboard
    47 00000030 68[1D000000]                push dword n
    48 00000035 68[21000000]                push dword format_int
    49 0000003A FF15[00000000]              call [scanf]
    50 00000040 83C408                      add esp, 4 * 2
    51                                      
    52                                      ;call the fread function
    53 00000043 FF35[16000000]              push dword [fd]
    54 00000049 6A32                        push dword len
    55 0000004B 6A01                        push dword 1
    56 0000004D 68[24000000]                push dword sir
    57 00000052 FF15[00000000]              call [fread]
    58 00000058 83C410                      add esp, 4 * 4
    59                                      
    60 0000005B BE[24000000]                mov esi, sir
    61 00000060 89C1                        mov ecx, eax    ;lenght of the file
    62 00000062 B800000000                  mov eax, 0
    63 00000067 BB00000000                  mov ebx, 0  ;sum of the bits
    64 0000006C E319                        jecxz end_loop
    65                                      
    66                                      start_loop:
    67 0000006E AC                              lodsb   ;the actual byte
    68                                          
    69 0000006F 2C30                            sub al, byte '0'
    70 00000071 8B15[1D000000]                  mov edx, dword [n]
    71                                          
    72                                          ;make the shift with ecx
    73 00000077 51                              push ecx
    74                                          
    75 00000078 8B0D[1D000000]                  mov ecx, dword [n]
    76                                          
    77 0000007E D2E8                            shr al, cl
    78 00000080 2401                            and al, byte 1
    79                                          
    80 00000082 00C3                            add bl, al
    81                                          
    82 00000084 59                              pop ecx
    83 00000085 E2E7                        loop start_loop
    84                                      
    85                                      end_loop:
    86                                     
    87                                      ;print the sum on the screen
    88 00000087 53                          push dword ebx
    89 00000088 68[21000000]                push dword format_int
    90 0000008D FF15[00000000]              call [printf]
    91 00000093 83C408                      add esp, 4 * 2
    92                                     
    93 00000096 FF35[16000000]              push dword [fd]
    94 0000009C FF15[00000000]              call [fclose]
    95 000000A2 83C404                      add esp, 4 * 1
    96                                      
    97                                     
    98                                      
    99                                      eroare:
   100                                      
   101                                      
   102 000000A5 6A00                        push dword 0
   103 000000A7 FF15[00000000]              call [exit]
