     1                                  global start
     2                                  
     3                                  bits 32
     4                                  
     5                                  extern printf, exit, fread, fopen, fclose
     6                                  import printf msvcrt.dll
     7                                  import exit msvcrt.dll
     8                                  import fread msvcrt.dll
     9                                  import fopen msvcrt.dll
    10                                  import fclose msvcrt.dll
    11                                  
    12                                  ;A text file is given. Read the content of the file, determine the digit with the highest frequency 
    13                                  ;and display the digit along with its frequency on the screen. The name of text file is defined in the data segment.
    14                                  
    15                                  segment data use32 class = data
    16 00000000 6669736965722E7478-         file_name db "fisier.txt", 0
    16 00000009 7400               
    17 0000000B 7200                        access_mode db "r", 0
    18 0000000D 256400                      format_int db "%d", 0
    19 00000010 FFFFFFFF                    fd dd -1
    20                                      len equ 20
    21 00000014 00<rept>                    sir times len db 0
    22 00000028 00000000                    lungime dd 0
    23 0000002C 00                          apmax db 0
    24 0000002D 00                          cifra db 0
    25 0000002E 2000                        space db " ", 0
    26                                  
    27                                  segment code use32 class = code
    28                                  
    29                                      start:
    30                                          ;open the file
    31 00000000 68[0B000000]                    push dword access_mode
    32 00000005 68[00000000]                    push dword file_name
    33 0000000A FF15[00000000]                  call [fopen]
    34 00000010 83C408                          add esp, 4 * 2
    35                                          
    36                                          ;test if we open the file well
    37 00000013 83F800                          cmp eax, 0
    38 00000016 0F84C5000000                    je eroare
    39 0000001C A3[10000000]                    mov [fd], eax
    40                                          
    41                                          ;read from the file
    42 00000021 FF35[10000000]                  push dword [fd]
    43 00000027 6A14                            push dword len  ;how many caracters we read
    44 00000029 6A01                            push dword 1    ;size of the caracters
    45 0000002B 68[14000000]                    push dword sir  ;offset of the string
    46 00000030 FF15[00000000]                  call [fread]    ;in eax we have the lenght of the string
    47 00000036 83C410                          add esp, 4 * 4
    48                                          
    49                                          ;eax = the lenght of the string we read
    50 00000039 A3[28000000]                    mov [lungime], eax    ;the lenght of the string
    51                                          
    52 0000003E B800000000                      mov eax, 0      ;for the stosb
    53 00000043 BE[14000000]                    mov esi, sir
    54                                          repeta:
    55 00000048 AC                                  lodsb   ;take every byte
    56                                              
    57 00000049 3C00                                cmp al, 0       ;end of the string
    58 0000004B 743E                                je end_repeta
    59                                              
    60                                              ;test if the actual byte is a digit
    61 0000004D 3C30                                cmp al, '0'
    62 0000004F 7C38                                jl nu_e_cifra
    63                                              
    64 00000051 3C39                                cmp al, '9'
    65 00000053 7F34                                jg nu_e_cifra
    66                                              
    67                                              ;count the number of apparence
    68 00000055 BF[14000000]                        mov edi, sir
    69 0000005A 8B0D[28000000]                      mov ecx, [lungime]    ;lenght of the string
    70 00000060 BB00000000                          mov ebx, 0      ;the index from the new string
    71 00000065 B600                                mov dh, 0       ;number of apparence
    72 00000067 E322                                jecxz end_repeta
    73                                              start_loop:
    74 00000069 8A141F                                  mov dl, byte [edi + ebx]    ;the current letter
    75 0000006C 43                                      inc ebx
    76                                                  
    77 0000006D 38D0                                    cmp al, dl
    78 0000006F 7503                                    jne mai_departe
    79 00000071 80C601                                  add dh, byte 1
    80                                                  
    81                                                  mai_departe:
    82 00000074 E2F3                                    loop start_loop
    83                                              
    84 00000076 3A35[2C000000]                      cmp dh, byte [apmax]
    85 0000007C 7E0B                                jle move_on
    86 0000007E 8835[2C000000]                      mov [apmax], dh
    87 00000084 A2[2D000000]                        mov [cifra], al
    88                                              
    89                                              nu_e_cifra:
    90                                              move_on:
    91 00000089 EBBD                                jmp repeta
    92                                              
    93                                          end_repeta:
    94                                          
    95                                          ;close the file
    96 0000008B FF35[10000000]                  push dword [fd]
    97 00000091 FF15[00000000]                  call [fclose]
    98 00000097 83C404                          add esp, 4 * 1
    99                                          
   100                                          ;make the digit int
   101 0000009A 802D[2D000000]30                sub [cifra],byte  '0'
   102                                          
   103 000000A1 B800000000                      mov eax, 0  ;mov the digit into eax
   104 000000A6 A0[2D000000]                    mov al, byte [cifra]
   105                                          
   106 000000AB 50                              push dword eax
   107 000000AC 68[0D000000]                    push dword format_int
   108 000000B1 FF15[00000000]                  call [printf]
   109 000000B7 83C408                          add esp, 4 * 2
   110                                          
   111 000000BA 68[2E000000]                    push dword space
   112 000000BF FF15[00000000]                  call [printf]
   113 000000C5 83C404                          add esp, 4 * 1
   114                                          
   115 000000C8 B800000000                      mov eax, 0
   116 000000CD A0[2C000000]                    mov al, [apmax] ;move the number of apparence to eax
   117                                          
   118 000000D2 50                              push dword eax
   119 000000D3 68[0D000000]                    push dword format_int
   120 000000D8 FF15[00000000]                  call [printf]
   121 000000DE 83C408                          add esp, 4 * 2
   122                                          
   123                                          eroare:
   124                                      
   125 000000E1 6A00                        push dword 0
   126 000000E3 FF15[00000000]              call [exit]
