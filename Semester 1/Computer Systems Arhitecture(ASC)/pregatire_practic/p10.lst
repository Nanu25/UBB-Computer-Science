     1                                  global start
     2                                  
     3                                  bits 32
     4                                  
     5                                  
     6                                  extern exit, scanf, fprintf, fopen, fclose
     7                                  import exit msvcrt.dll
     8                                  import scanf msvcrt.dll
     9                                  import fprintf msvcrt.dll
    10                                  import fopen msvcrt.dll
    11                                  import fclose msvcrt.dll 
    12                                  
    13                                  ;Se citeste de la tastatura m,n apoi m numere zecimale, pe linii diferite.
    14                                  ; Sa se afiseze nr cu cel putin n cifre pare in output.txt
    15                                  
    16                                  segment data use32 class = data
    17                                  
    18 00000000 6F75747075742E7478-         file_name db "output.txt", 0
    18 00000009 7400               
    19 0000000B 7700                        write_mode db "w", 0
    20 0000000D FFFFFFFF                    fd dd -1
    21 00000011 25642000                    format_int db "%d ", 0
    22 00000015 00000000                    n dd 0
    23 00000019 00000000                    m dd 0
    24 0000001D 00000000                    x dd 0
    25 00000021 00000000                    cifre_pare dd 0
    26 00000025 0A000000                    zece dd 10
    27                                      
    28                                  segment code use32 class = code
    29                                  
    30                                      start:
    31                                          ;open the file
    32 00000000 68[0B000000]                    push dword write_mode
    33 00000005 68[00000000]                    push dword file_name
    34 0000000A FF15[00000000]                  call [fopen]
    35 00000010 83C408                          add esp, 4 * 2
    36                                          
    37                                          ;test if it was open corect
    38 00000013 83F800                          cmp eax, 0
    39 00000016 0F84B4000000                    je eroare
    40 0000001C A3[0D000000]                    mov dword [fd], eax
    41                                          
    42                                          ;read m
    43 00000021 68[19000000]                    push dword m
    44 00000026 68[11000000]                    push dword format_int
    45 0000002B FF15[00000000]                  call [scanf]
    46 00000031 83C408                          add esp, 4 * 2
    47                                          
    48                                          ;read n
    49 00000034 68[15000000]                    push dword n
    50 00000039 68[11000000]                    push dword format_int
    51 0000003E FF15[00000000]                  call [scanf]
    52 00000044 83C408                          add esp, 4 * 2
    53                                          
    54 00000047 8B0D[19000000]                  mov ecx, dword [m]
    55 0000004D E372                            jecxz loop_end
    56                                          loop_start:
    57 0000004F 60                                  pusha
    58                                              
    59 00000050 68[1D000000]                        push dword x
    60 00000055 68[11000000]                        push dword format_int
    61 0000005A FF15[00000000]                      call [scanf]
    62 00000060 83C408                              add esp, 4 * 2
    63                                              
    64                                              ;count the even digits of x
    65 00000063 A1[1D000000]                        mov eax, dword [x]
    66 00000068 C705[21000000]0000-                 mov [cifre_pare], dword 0
    66 00000070 0000               
    67                                              repeta:
    68                                                  
    69 00000072 83F800                                  cmp eax, 0      ;end of the number
    70 00000075 7420                                    je end_repeta
    71                                                  
    72 00000077 89C3                                    mov ebx, eax
    73 00000079 83E001                                  and eax, 1
    74 0000007C 83F800                                  cmp eax, dword 0
    75 0000007F 7507                                    jne not_even
    76                                                  
    77 00000081 8305[21000000]01                        add [cifre_pare], dword 1
    78                                                  
    79                                                  not_even:
    80                                                  
    81 00000088 89D8                                    mov eax, ebx
    82 0000008A BA00000000                              mov edx, 0
    83 0000008F F735[25000000]                          div dword [zece]
    84 00000095 EBDB                                jmp repeta
    85                                              
    86                                              end_repeta:
    87                                              
    88 00000097 A1[21000000]                        mov eax, dword [cifre_pare]
    89 0000009C 3B05[15000000]                      cmp eax, dword [n]
    90 000000A2 7C1A                                jl mai_departe
    91                                              
    92                                              ;print the number
    93 000000A4 FF35[1D000000]                      push dword [x]
    94 000000AA 68[11000000]                        push dword format_int
    95 000000AF FF35[0D000000]                      push dword [fd]
    96 000000B5 FF15[00000000]                      call [fprintf]
    97 000000BB 83C40C                              add esp, 4 * 3
    98                                              
    99                                              mai_departe:
   100 000000BE 61                                  popa
   101                                          
   102 000000BF E28E                            loop loop_start
   103                                          loop_end:
   104                                          
   105 000000C1 FF35[0D000000]                  push dword [fd]
   106 000000C7 FF15[00000000]                  call [fclose]
   107 000000CD 83C408                          add esp, 4 * 2
   108                                          
   109                                          eroare:
   110                                          
   111                                      
   112 000000D0 6A00                        push dword 0
   113 000000D2 FF15[00000000]              call [exit]
   114                                      
   115                                      
