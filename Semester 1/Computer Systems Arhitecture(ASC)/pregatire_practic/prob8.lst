     1                                  global start
     2                                  
     3                                  bits 32
     4                                  
     5                                  extern scanf, fprintf, fopen, fclose, exit
     6                                  import scanf msvcrt.dll
     7                                  import fprintf msvcrt.dll
     8                                  import fopen msvcrt.dll
     9                                  import fclose msvcrt.dll
    10                                  import exit msvcrt.dll
    11                                  
    12                                  ;Citesc string tastatura, creem fisier string.txt, adaugam in fisier prima data majusculele apoi minusculele invers de cum apar in sir
    13                                  
    14                                  segment data use32 class = data
    15 00000000 737472696E672E7478-         file_name db "string.txt", 0
    15 00000009 7400               
    16 0000000B 7700                        write_mode db "w", 0
    17 0000000D FFFFFFFF                    fd dd -1
    18 00000011 00<rept>                    sir times 30 db 0
    19 0000002F 257300                      format_str db "%s", 0
    20 00000032 256300                      format_c db "%c", 0
    21                                  segment code use32 class = code
    22                                  
    23                                      start:
    24                                      ;open the file
    25 00000000 68[0B000000]                push dword write_mode
    26 00000005 68[00000000]                push dword file_name
    27 0000000A FF15[00000000]              call [fopen]
    28 00000010 83C408                      add esp, 4 * 2
    29                                      
    30                                      ;check if the open was succesfully
    31 00000013 83F800                      cmp eax, 0
    32 00000016 0F8493000000                je eroare
    33 0000001C A3[0D000000]                mov [fd], eax
    34                                      
    35 00000021 68[11000000]                push dword sir
    36 00000026 68[2F000000]                push dword format_str
    37 0000002B FF15[00000000]              call [scanf]
    38 00000031 83C408                      add esp, 4 * 2
    39                                      
    40                                      ;uppercase in the order that they appear
    41 00000034 BE[11000000]                mov esi, sir
    42 00000039 BB00000000                  mov ebx, 0
    43                                      repeta:
    44 0000003E B800000000                      mov eax, 0
    45 00000043 AC                              lodsb   ;actual byte from esi and esi++
    46                                          
    47 00000044 3C00                            cmp al, byte 0
    48 00000046 7422                            je end_repeta
    49                                          
    50 00000048 3C41                            cmp al, byte 'A'
    51 0000004A 7C1B                            jl not_good
    52                                          
    53 0000004C 3C5A                            cmp al, byte 'Z'
    54 0000004E 7F17                            jg not_good
    55                                          
    56 00000050 53                              push ebx
    57                                          
    58 00000051 50                              push dword eax
    59 00000052 68[32000000]                    push dword format_c
    60 00000057 FF35[0D000000]                  push dword [fd]
    61 0000005D FF15[00000000]                  call [fprintf]
    62 00000063 83C40C                          add esp, 4 * 3
    63                                          
    64 00000066 5B                              pop ebx
    65                                          not_good:
    66 00000067 43                              inc ebx
    67 00000068 EBD4                            jmp repeta
    68                                      end_repeta:
    69                                      
    70 0000006A BE[11000000]                mov esi, sir
    71                                      
    72 0000006F FD                          std ;set direction flag
    73 00000070 4B                          dec ebx
    74                                      repeta2:
    75 00000071 B800000000                      mov eax, 0
    76 00000076 8A041E                          mov al, [esi + ebx]
    77 00000079 4B                              dec ebx
    78                                          
    79 0000007A 83FB00                          cmp ebx, dword 0
    80 0000007D 7421                            je end_repeta2
    81                                          
    82 0000007F 3C61                            cmp al, 'a'
    83 00000081 7C1B                            jl not_good2
    84                                          
    85 00000083 3C7A                            cmp al, 'z'
    86 00000085 7F17                            jg not_good2
    87                                          
    88 00000087 53                              push dword ebx
    89                                          
    90 00000088 50                              push dword eax
    91 00000089 68[32000000]                    push  dword format_c 
    92 0000008E FF35[0D000000]                  push dword [fd]
    93 00000094 FF15[00000000]                  call [fprintf]
    94 0000009A 83C40C                          add esp, 4 * 3
    95                                          
    96 0000009D 5B                              pop ebx
    97                                          not_good2:
    98                                          
    99                                      
   100 0000009E EBD1                        jmp repeta2
   101                                      end_repeta2:
   102                                      
   103                                      ;close the file
   104 000000A0 FF35[0D000000]              push dword [fd]
   105 000000A6 FF15[00000000]              call [fclose]
   106 000000AC 83C408                      add esp, 4 * 2
   107                                      eroare:
   108                                      
   109 000000AF 6A00                        push dword 0
   110 000000B1 FF15[00000000]              call [exit]
