     1                                  global start
     2                                  bits 32
     3                                  
     4                                  extern exit, printf, fread, fopen, fclose
     5                                  import exit msvcrt.dll
     6                                  import printf msvcrt.dll
     7                                  import fread msvcrt.dll
     8                                  import fopen msvcrt.dll
     9                                  import fclose msvcrt.dll
    10                                  
    11                                  ;Read from file numbers.txt a string of numbers (odd and even). Build two strings using readen numbers:
    12                                  ;P – only with even numbers
    13                                  ;N – only with odd numbers
    14                                  ;Display the strings on the screen.
    15                                  
    16                                  %include "printstring.asm"
     1                              <1> %ifndef _PRINTSTRINGASM_
     2                              <1> %define _PRINTSTRINGASM_
     3                              <1> 
     4                              <1> extern printf
     5                              <1> import printf msvcrt.dll
     6                              <1> 
     7                              <1> print_string:
     8 00000000 8B7C2404            <1>     mov edi, [esp + 4]  ;format int
     9 00000004 83C404              <1>     add esp, 4 * 1
    10                              <1>     
    11 00000007 8B4C2404            <1>     mov ecx, [esp + 4]  ;the lenght of the string
    12 0000000B 83C404              <1>     add esp, 4 * 1
    13                              <1>     
    14 0000000E 8B742404            <1>     mov esi, [esp + 4]  ;the offset of the string
    15 00000012 B800000000          <1>     mov eax, 0
    16 00000017 E318                <1>     jecxz end_loop
    17                              <1>     start_loop:
    18 00000019 BB00000000          <1>         mov ebx, 0
    19 0000001E 8A1C06              <1>         mov bl, [esi + eax]
    20 00000021 40                  <1>         inc eax
    21 00000022 83EB30              <1>         sub ebx, '0'
    22                              <1>         
    23 00000025 60                  <1>         pusha
    24 00000026 53                  <1>         push dword ebx
    25 00000027 57                  <1>         push dword edi
    26 00000028 FF15[00000000]      <1>         call [printf]
    27 0000002E 61                  <1>         popa
    28                              <1>     
    29 0000002F E2E8                <1>     loop start_loop
    30                              <1>     
    31                              <1>     end_loop:
    32 00000031 C20C00              <1>     ret 4 * 3
    33                              <1> %endif
    17                                  
    18                                  segment data use32 class = data
    19 00000034 5C6E00                      new_line db '\n', 0
    20 00000037 257300                      format_string db "%s", 0
    21 0000003A 256400                      format_int db "%d", 0
    22 0000003D 7200                        in_mode db "r", 0
    23 0000003F 66696C652E74787400          file_in db "file.txt", 0
    24 00000048 FFFFFFFF                    fd dd -1
    25 0000004C 64000000                    len dd 100
    26 00000050 00000000<rept>              odd_string times 50 dd 0
    27 00000118 00000000<rept>              even_string times 50 dd 0
    28 000001E0 00000000<rept>              x times 100 dd 0
    29                                  
    30                                  segment code use32 class = code
    31                                  
    32                                      start:
    33                                          
    34                                          ;open the file
    35 00000000 68[3D000000]                    push dword in_mode
    36 00000005 68[3F000000]                    push dword file_in
    37 0000000A FF15[00000000]                  call [fopen]
    38 00000010 83C408                          add esp, 4 * 2
    39                                          
    40 00000013 83F800                          cmp eax, 0
    41 00000016 0F8498000000                    je error1
    42 0000001C A3[48000000]                    mov [fd], eax
    43                                          
    44 00000021 BE00000000                      mov esi, 0
    45 00000026 BF00000000                      mov edi, 0
    46                                          
    47 0000002B B900000000                      mov ecx, 0
    48                                          repeta:
    49 00000030 FF35[48000000]                      push dword [fd]
    50 00000036 6A01                                push dword 1
    51 00000038 6A01                                push dword 1
    52 0000003A 68[E0010000]                        push dword x
    53 0000003F FF15[00000000]                      call [fread]
    54 00000045 83C410                              add esp, 4 * 4
    55                                          
    56                                          
    57                                              ;mov eax, [x + ecx]
    58                                              ;inc ecx
    59                                              
    60 00000048 83F800                              cmp eax, 0
    61 0000004B 7425                                je repeta_end
    62                                              
    63                                              
    64 0000004D 8B1D[E0010000]                      mov ebx, [x]    ;read a string from the file
    65 00000053 89DA                                mov edx, ebx    ;move the number to test it s parity
    66 00000055 83EA30                              sub edx, '0'    ;make an int number
    67 00000058 83E201                              and edx, 1
    68 0000005B 83FA00                              cmp edx, 0      
    69 0000005E 7409                                je par
    70                                              
    71                                              ;impar 
    72 00000060 899E[50000000]                      mov [odd_string + esi], ebx ;remember the string
    73 00000066 46                                  inc esi
    74 00000067 EB07                                jmp continue
    75                                          
    76                                              par:
    77 00000069 899F[18010000]                         mov [even_string + edi], ebx
    78 0000006F 47                                     inc edi
    79                                              continue:
    80 00000070 EBBE                            jmp repeta
    81                                          
    82                                          repeta_end:
    83                                          
    84                                          ;cllose the file
    85 00000072 FF35[48000000]                  push dword [fd]
    86 00000078 FF15[00000000]                  call [fclose]
    87 0000007E 83C404                          add esp, 4 * 1
    88                                          
    89                                          
    90                                          
    91 00000081 68[3A000000]                    push dword format_int
    92 00000086 56                              push dword esi
    93 00000087 68[50000000]                    push dword odd_string
    94 0000008C E8(00000000)                    call print_string
    95                                          
    96 00000091 68[34000000]                    push dword new_line
    97 00000096 68[37000000]                    push dword format_string
    98 0000009B FF15[00000000]                  call [printf]
    99 000000A1 83C408                          add esp, 4 * 2
   100                                          
   101 000000A4 68[3A000000]                    push dword format_int
   102 000000A9 57                              push dword edi
   103 000000AA 68[18010000]                    push dword even_string
   104 000000AF E8(18010000)                    call even_string
   105                                          
   106                                          
   107                                          ;display the odd numbers
   108                                          ;mov ecx, esi
   109                                          ;mov eax, 0      ;the index
   110                                          ;mov esi, odd_string
   111                                          ;jecxz end_loop1
   112                                          ;start_loop1:
   113                                          ;    mov ebx, 0
   114                                          ;    mov bl, [esi + eax]
   115                                          ;    inc eax
   116                                              
   117                                          ;    sub ebx, '0'
   118                                              
   119                                              
   120                                          ;    pusha
   121                                              
   122                                          ;    push dword  ebx
   123                                          ;    push dword format_int
   124                                          ;    call [printf]
   125                                          ;    add esp, 4 * 2
   126                                              
   127                                          ;    popa
   128                                          ;loop start_loop1
   129                                          ;end_loop1:
   130                                  
   131                                          
   132                                          error1:
   133                                          
   134 000000B4 6A00                        push dword 0
   135 000000B6 FF15[00000000]              call [exit]
